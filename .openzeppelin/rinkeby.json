{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x784200bff41cb69B2D5E4084daE706DCe3A5Aa5c",
    "txHash": "0xc6b022abe7010f4e5c11c673fa1b0abd5abb89269cf46de820066e11ca64f81d",
    "deployTransaction": {
      "hash": "0xc6b022abe7010f4e5c11c673fa1b0abd5abb89269cf46de820066e11ca64f81d",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x206231Ec6580dAc4c3F93E44C17A7eC5323968A6",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 455,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x8de2fb9835e8db74dfda9eee4f15691dddc10457a65a0c1f808448fde9066e2d",
      "s": "0x3c69f82bb13688283b151dd0f35dfef15753b0636b9bde8c0c7ff6750792eb4c",
      "v": 43,
      "creates": "0x784200bff41cb69B2D5E4084daE706DCe3A5Aa5c",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0xf16355f96BD22acCA078929510455eCd715b8ed7",
      "txHash": "0x7f5970516fba3ce31af0100bd5e6c5ff4d971f2f7d75ddccf7447b8ddab39edc",
      "kind": "transparent"
    },
    {
      "address": "0x2706753B8dD2a0fCeddb0Ab7A90277d891c9554C",
      "txHash": "0xa116370362911cbf70d464186630a08d2e7d29f5dbbe2e9797be4ad4b6e0df68",
      "kind": "transparent"
    },
    {
      "address": "0xA493A2fB574bb5EB9A2412e4983e4EeB4D82c9b8",
      "txHash": "0x58a8baa53fe3b8c24ed7510eb47e5bd1bc91a6251f0205ddfeda44da68be8c09",
      "kind": "transparent"
    },
    {
      "address": "0x1aAAb861dEb58445ee87943C827832be145D1177",
      "txHash": "0xd4ca88f91044fc296d63eb57c8580fce8d0e18d5cbca4c262d32b85efd9f0527",
      "kind": "transparent"
    },
    {
      "address": "0xbc62a583c288B840916f97d136B43516119EADbE",
      "txHash": "0xaf65b4462d41327ed6cd706060cbbb4362e282bdfa96d5670eb99fd0f59189f9",
      "kind": "transparent"
    },
    {
      "address": "0xc6c3F29Dba8dC40314DA27E8fBA4b8489B118058",
      "txHash": "0xfd779096a31fe5534c0a559b7bb2b5c7a74473ef58d9dbe0bdba95927cdf8252",
      "kind": "transparent"
    },
    {
      "address": "0x8C4fe936A040540EfC7B4501708b309264f271BF",
      "txHash": "0x485cf229c37a0c84c73761f4fe99640cde6fabe485479f39e2ba9aa4691d3bbb",
      "kind": "transparent"
    },
    {
      "address": "0x7bd23aae6bC61f919761dd2b30362e8915a98767",
      "txHash": "0x09d5d51ccd6484af22da024e4f5b3440d9b5064b6d398c13ba09883a801d2f68",
      "kind": "transparent"
    },
    {
      "address": "0xf7adFe9a587945b21462C9AE323bd2b930513474",
      "txHash": "0x94faf2f990a0e119659e715d6c9fc5f2cc96f109b28c7b657a52b3fc786f1877",
      "kind": "transparent"
    },
    {
      "address": "0x6D9b787628e5F43D18cE239912e4421Ee6cD7772",
      "txHash": "0xeb6c05ffa3c4095993396a8a083ffce3bec9cb98fb1bc5a20ddb045a96607202",
      "kind": "transparent"
    },
    {
      "address": "0xda771ef275948A342bA8904d50ca1Ea4b9b549d8",
      "txHash": "0x64a82d30ddad14940a7edd497ac84e6ef3305192527cbf8db9ff125e5a89edbd",
      "kind": "transparent"
    },
    {
      "address": "0xF0a2555fFE127373958d36FA34c26d75150F574d",
      "txHash": "0x492b75feab21f250a7382e689c9a68598be47f652e7228ac5b71dc2053fccae2",
      "kind": "transparent"
    },
    {
      "address": "0xd93A53a7346714fA6Dc1fcE09b000044711531c8",
      "txHash": "0xaffb3311ea19c3729092e47a6ad9486c0f9dd46be39db8f2d272bf618826f535",
      "kind": "transparent"
    },
    {
      "address": "0x995f76Da66beF54f06286E2EEfAb0406B6a1D7A9",
      "txHash": "0xbe7e22f3eaf7c2a2a4a041fc4046516777c5d1bd2515f38d86deef04dc955dde",
      "kind": "transparent"
    },
    {
      "address": "0x11c555E2B3A8CEF72d6F3eCb0197fAa6d8794Bb3",
      "txHash": "0xb4dc7cda8b056f1a5b20b732cbfd7cc95ff8b78aafc61d16e7deefa04a515544",
      "kind": "transparent"
    },
    {
      "address": "0x8c0162BD5194977Bea6876aceF85BeC00Ba059f7",
      "txHash": "0x1bf8a3a122fe337e464f1d8b85ec1b5d28e6207d53a5128672d32ed5a92ec2bb",
      "kind": "transparent"
    },
    {
      "address": "0x0200e7e6215D7b54a010261e4E995d7c7ef8038b",
      "txHash": "0x0f19404ecbb74cb545ffa45522551e79a019aba09c1d51dfc3f3939de93f9b3b",
      "kind": "transparent"
    },
    {
      "address": "0xcD6b46352c2b6CE9F7C38DD11F32B32aB0aA73F4",
      "txHash": "0x570b67875cf3c69936d8066bdb8b725539167d92791ade367809df275c90a235",
      "kind": "transparent"
    },
    {
      "address": "0x3Dad0AeeE573F365d4499c25bd1426e99e3CA137",
      "txHash": "0xc857923cd8a452c4d70b5f847909a17dc2308110b06f80857521b3f18529f060",
      "kind": "transparent"
    },
    {
      "address": "0x4159c27c8d1f71c88CE86C7d24A382407f8E50BE",
      "txHash": "0x28d814e81aab78902fb9f5ced6a9d4c5894ffd22ff544dcb7d69b975638fce50",
      "kind": "transparent"
    },
    {
      "address": "0x90e572cc87c09a18794D3e12A06C5Cd779598d08",
      "txHash": "0x59bb72c11068c97f4e59fb41f4157eb4bc51746ed2eb053c04e38effc2f8848e",
      "kind": "transparent"
    },
    {
      "address": "0xA3a384FB9b39c2AE9c98aDd4950f6c9469f10b3a",
      "txHash": "0x50457ff6eba92e45b3ccfdeac2f9a9ef940721c3d421535164895bb402d6c4ad",
      "kind": "transparent"
    },
    {
      "address": "0x2bD73a30C023B457530D22971000e7850Fe89C7F",
      "txHash": "0xe26a53a9c90b5ca2d52fcc9e4a7987c66820ffa0e19a37f89a59625c55f79cc2",
      "kind": "transparent"
    },
    {
      "address": "0x5410bDaBC924f513c62457D8e5bA423B7EC4FEcc",
      "txHash": "0xc1b8c13d5cb1d73b9d3de13a4eaa245fa1627883802b5feae20647ef1a2e4c24",
      "kind": "transparent"
    },
    {
      "address": "0x2F6acC6a243861340c3D627f3295C8bC0Ae3A859",
      "txHash": "0x9641197c211ed9dec148337dc07cd1e27c5ca478782825ca028a7389fe9f8cf0",
      "kind": "transparent"
    },
    {
      "address": "0x8dA4867Ff6177AB33A2670442bC6b74AdA327c59",
      "txHash": "0x8c0fa2d0f68ff92ba57ed926f156639d1896655c677b68b8faebf17928cad781",
      "kind": "transparent"
    },
    {
      "address": "0x7259185C861733C8553853Af437ab70d3b517cf9",
      "txHash": "0x112a18f22cfc565daeb6fe855847bf92ee042c412a5e71d738234fd7de5ee464",
      "kind": "transparent"
    },
    {
      "address": "0x4aB928Eb7C29ba1B54c40dee6B31189F80adFC3E",
      "txHash": "0xfc59d81a18c197edcb63452ff8279012f248d62304d5ca96a9ca5137e200415f",
      "kind": "transparent"
    },
    {
      "address": "0x2798991c9b80AffEeb6Fc8f9bD774A4Bd3Dd6027",
      "txHash": "0x541074f58db0056438c2431f8d14141fa42729a7a2e8013ecfa6428dda50554c",
      "kind": "transparent"
    },
    {
      "address": "0xABc3b21c00EDB5AaC2B09f102836ECb60BBD697d",
      "txHash": "0x19a84ae1d5415785d0634f2d7c4215704d6ca069c662b49789ba8621fe3d763f",
      "kind": "transparent"
    },
    {
      "address": "0x69435F9439359b16c5f783Fb1C0F218339f9e3e0",
      "txHash": "0xecdde4ca9abc205c19c7829d99facaef2e29df0c8dd8e0b6f87ed747959078a7",
      "kind": "transparent"
    },
    {
      "address": "0xf37F8220A8e5067aBFC217e9Db7A749E8527BeA0",
      "txHash": "0x08c25b9e23ea420c6c6a3521a267e31fe00d55bc55a1672a44ab577145facc19",
      "kind": "transparent"
    },
    {
      "address": "0xc009238dC67c83e2F2E2CBA27A5d2578c9c6cB2E",
      "txHash": "0x331fc1a02f6cea9ae9d8e80610e059a604a8f5c9d67b051ed6c4baca1185f096",
      "kind": "transparent"
    },
    {
      "address": "0x5590EF86FB8CA6E5E45fC3CC710445C2299c755E",
      "txHash": "0xeb34db32c1b8b86b5d2da6315e0fcaf1489ca03365ba8ca2a000f86da9718601",
      "kind": "transparent"
    },
    {
      "address": "0x115Af4f6457e609d4818dbb777b4A32E522122F2",
      "txHash": "0xfb432df46f7b9d28337f014db16794de722b5f484eb337c1440af1f2c0a2d0d0",
      "kind": "transparent"
    },
    {
      "address": "0x398EdA28Fe2c9c55068b73b58611f5c82E0Ab255",
      "txHash": "0xaa5fc9fce8d0de5b1cb541c5c9bcecffc860e3cf898caabe9f68c95736662da1",
      "kind": "transparent"
    },
    {
      "address": "0x50292C17867F3aFb80b984771d2B06b59b44c793",
      "txHash": "0xcb0aa0d26c4efee74b518b75e4047cd5bcc6175bd091cbfe562826731f91ba9e",
      "kind": "transparent"
    },
    {
      "address": "0x1DdF61f8E4A933dCBC66D34988853ca332332b3e",
      "txHash": "0x33fab7b7e1e2d484a59126563dc49060f90afbf29b51b4b9e336c6e2b649c92a",
      "kind": "transparent"
    },
    {
      "address": "0xC6EEc46f85c3B67147A011CDC58d687FBc76EC8B",
      "txHash": "0x2c9931a79b34c32965ffb4c6aba70596fd28a8be9ee73f058bf1e9941d160d3c",
      "kind": "transparent"
    },
    {
      "address": "0x057A3E82FB98dB1C97ea5A38fc193EBE10623463",
      "txHash": "0x5146e9a952acedf38922391f383788e930ed461746ec1b19eceec671db565072",
      "kind": "transparent"
    },
    {
      "address": "0xE85fB9D09D3d12FD51F6Ca5c90AD9f5bFa67129F",
      "txHash": "0xc57a3807d57a3bab1b2ea71a2764663e53a98b15b260469922f2aa28c70edb8d",
      "kind": "transparent"
    },
    {
      "address": "0x518c341D34893db66E3225a6118d41b975650b3f",
      "txHash": "0x202d40adb070021cbd6975be12bd11b195793b10ec573f64d523b88eed604771",
      "kind": "transparent"
    },
    {
      "address": "0x869c94E1218eAB2a0F589DEe75C7cEe1998111aC",
      "txHash": "0xc07cbf583229e542aa2d8fa096e0ae47acf2b612413a791b30bbbf86ce9d57ee",
      "kind": "transparent"
    },
    {
      "address": "0x57e1489c907505b6a47462cEaC0A1cA15892e945",
      "txHash": "0x839d036ebaa0366375e39e034efed5abaa9c26a844501ac0c3d97df1a2e2fb06",
      "kind": "transparent"
    },
    {
      "address": "0x5ffd93768e569EF57F4A3b41E7b027285955BD48",
      "txHash": "0xf15989b985ab00f01b9cd0cb955afa01e411f6ade35ab6a23a4db66755a314de",
      "kind": "transparent"
    },
    {
      "address": "0x2059a2243314d44f74294686b2d055363DB3992e",
      "txHash": "0xd94ab9ade9d8d712584864d6dd8a671d1c011fcf48817429a38066191f9dcf0d",
      "kind": "transparent"
    },
    {
      "address": "0xEEF786398D5081625fe15ca6e04DDA882Fa40F0C",
      "txHash": "0x332fcd19b63641bb43cade50f3ad37e94eec02b8e8129d9cc635fb23aa74662b",
      "kind": "transparent"
    },
    {
      "address": "0x784e0883502463B15fde6F508e06b01FF7Cc67Ed",
      "txHash": "0x9cd8c250f1079478cf42ab3df1a7d8f28a307d2888256eec33479bbee6dd8126",
      "kind": "transparent"
    },
    {
      "address": "0x9AF3c72D22D4B64fc41AcBcB59442855a0Afce9d",
      "txHash": "0x653239c166cc69db6e42c53e83c3acdcb8961e733b5eaaeeba8dc66ac5e5a22e",
      "kind": "transparent"
    },
    {
      "address": "0x961d003c74aD60F9e6229533F58A388453deACa1",
      "txHash": "0x85b1adc90c0d851af9f04ff0a5b862652ac91b31187eb803db9f064508640cd8",
      "kind": "transparent"
    },
    {
      "address": "0x97Ad9d52199048e4EB8685F9660CacE8ca86886B",
      "txHash": "0x3fd75db43dfe6dff2ec40c25eea29ee31fef7ecd44b2bf01a5b1fb5f77dee902",
      "kind": "transparent"
    },
    {
      "address": "0x106161264Ce4bc48df82d62b8e0cD6C746a7B636",
      "txHash": "0x66207c16fba0d5c9bd5fc5862b1f9703a39991e63763ed66203e9c492ad1959b",
      "kind": "transparent"
    },
    {
      "address": "0x35d28d2Aa9D436D57b32305dF5d9E146Dfb9861F",
      "txHash": "0xfca192b520f181d630e555c69288acfb715bae239a61c9a4560614105ad69a74",
      "kind": "transparent"
    },
    {
      "address": "0xD28Fc27fBC98111cd1989245933b11a2b2617D32",
      "txHash": "0xca9b700924a879002c829b96ccf6847d57442bbe7d58dbce9e562ca5565bb19e",
      "kind": "transparent"
    },
    {
      "address": "0x64DF9b882256Ae50Aa60CF4d5466cE2218FcA157",
      "txHash": "0x5f64ec7a7d8d01096e72b00fc49adc5e9d4791797e8ae770e6054d67404a5d43",
      "kind": "transparent"
    },
    {
      "address": "0xcEB51538995b0684fd31CB913cC78F479917f871",
      "txHash": "0xaabce849ac68dedc84f06410564e6606083970e1dc7fbf61960633d295cfe666",
      "kind": "transparent"
    },
    {
      "address": "0x27266119c0Ca3255Bc7E7FB809fCEB79CFEC9992",
      "txHash": "0xd2da70515d20b671a3252d9c7c436cd6659f5f45e9f6a7e073c769c603c32bc1",
      "kind": "transparent"
    },
    {
      "address": "0xD9B9d5d17a7b5C9C6e9dB09650A7af1493d1a803",
      "txHash": "0x0a6c98e7e1ebff97992d87034cb70f13ec7e73f906c10a9c8ad11fafe42767af",
      "kind": "transparent"
    },
    {
      "address": "0x8B65bB7839e803440e46Bc199C16Ee0Bc6fbBdfF",
      "txHash": "0xe3a0ea04c59a09317de2adc0e9532acb35e2c489a95c0eb8015b5d8e7b58df3d",
      "kind": "transparent"
    },
    {
      "address": "0xa6875Da11d245E0AbA0021d3DAFdF3240D0A2A39",
      "txHash": "0x8e7d2ccf41e12c12c7f45fbf9a3939f7ded771ba2bcf87ba81736476d3714567",
      "kind": "transparent"
    },
    {
      "address": "0x6733D7a84851c7940DDe5fAf6EA85597d4615a80",
      "txHash": "0x37e6cba808eafa7d8d292ab4610f027f379e91e8c24f5bbc57a6cd25fd094997",
      "kind": "transparent"
    },
    {
      "address": "0xF49d67De81915398bb8A3B1b7eAb0D39c945501C",
      "txHash": "0x878a502a40c7d565a03f61ecd8bd95ed832d81d40a8a3c66c527edf11ed064fb",
      "kind": "transparent"
    },
    {
      "address": "0xf7F46BD24b640C4d77e85477E6a354C66fC5A947",
      "txHash": "0xc9d510a816d3fd81749a74917bb0f1ec6f380eafa3b2cfd78fe6e8466f1803fb",
      "kind": "transparent"
    },
    {
      "address": "0xb8debd31fc346F54E5BB04d83721062d12544962",
      "txHash": "0x388491124b6e86b780603dc18ea384766dac43a468bec42012629f5fc8f7cc3a",
      "kind": "transparent"
    },
    {
      "address": "0xf77A27280EFd12C92A7eE6b77acF8D506cc5AF5E",
      "txHash": "0xe2e92698d7229d5af764db61c7908dc6373924c9921e5ea927b8e9659fa3aff9",
      "kind": "transparent"
    },
    {
      "address": "0xFb66BCD2b99a6CfA599c3c078b971028d68ded84",
      "txHash": "0xde3e085eb99bf76edb25496e1e7372f84e73c9aec95289c61222bab6d2549d06",
      "kind": "transparent"
    },
    {
      "address": "0xC229Ec67dfE198b86191F62bBBfD54E456933FCf",
      "txHash": "0xed6c7731b166c64c7ff1cd52a89342850d17c972dea873ef11b275f60381dbfc",
      "kind": "transparent"
    },
    {
      "address": "0x64014a1E39bB05cb9195a936045E5738D9a6B3bB",
      "txHash": "0x5f6c07b952246de382631230d5d91d00bdc33ef748460f44d616cb889e652269",
      "kind": "transparent"
    },
    {
      "address": "0x73E2413c2bF9bb19DBA09644708b2eed034972C0",
      "txHash": "0xae27c4e7bcfccaaefdef696e470f921ab4147490156916ac9cb5b4192fecfeab",
      "kind": "transparent"
    },
    {
      "address": "0x22224b0482eE0F575FCA11BBD42ACed7aaF429AA",
      "txHash": "0x03065ab11b647f23e87e9e4d7a5bdeb556d02dd815f4ec96975d24b3e983df5f",
      "kind": "transparent"
    },
    {
      "address": "0xB119bE31A1f83B22ac91e397c3C605F7d1B04d1b",
      "txHash": "0x160284289fe491f56f6763f2c60e26eaa08dfe7618017d6303d0797daf9209e0",
      "kind": "transparent"
    },
    {
      "address": "0x830b1e17c415C00d3AbF4858b262E089c0dfde3a",
      "txHash": "0x8511bf4b677c38679e6a8a589d60a487929983b27df5f706e868d0143a40b3ea",
      "kind": "transparent"
    },
    {
      "address": "0x5b5AA5145FbcEf6C5E7Ef93eB95ec67143508316",
      "txHash": "0x2fe568c4c69d4a44ec9c3eeb06b8897b5272db875bde7e7ccf0f75654c5e34c7",
      "kind": "transparent"
    },
    {
      "address": "0x75Ac5182a4A4e6F112dF7F049207fE576c4A6951",
      "txHash": "0x8acd7338626362d210b286aaa5799c50d8d76f2580eb6a57725a63bdfec803a9",
      "kind": "transparent"
    },
    {
      "address": "0x4cF411A78785cE9c13D2959C6B8A979Af60fC599",
      "txHash": "0x603bd5b909bcf9ffe867218207f300e27a2b47c06304af5ccd303a97c025ed5e",
      "kind": "transparent"
    },
    {
      "address": "0xe59043Cb861a9eaf924Db56A12A9f70b554843DC",
      "txHash": "0x994b9415afea53b32bf1bc568a3500823cf35d57093bc6b27c8876ee02a1b6c3",
      "kind": "transparent"
    },
    {
      "address": "0x2C5144793Fe110B447a36FbF9bdC29938DdB3D01",
      "txHash": "0x36a27a7781f493a0c9415017fa172230857f6316143076451b3d37d1800ccec6",
      "kind": "transparent"
    },
    {
      "address": "0x855Af735492897A5c9B874994fDc7E1ad5511B0f",
      "txHash": "0x82548be258d01c7ad7ee0d6d4781b38a7c7eafa60447f5f13f949e34350a4d77",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f24ea64c7f1b08e97ae4356d329db2242cfc5ccddd1fdfee8cf4691c972fdcef": {
      "address": "0x4C38F56461CA43231cfa4C88F4dF2454DDc22028",
      "txHash": "0xbd5830c8eaa8001ae2964587ba9689471e365557a2ae2263d2474a52978c2433",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/ERC20UpgradeSafe.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/ERC20UpgradeSafe.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/ERC20UpgradeSafe.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/ERC20UpgradeSafe.sol:42"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/ERC20UpgradeSafe.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "contracts/ERC20UpgradeSafe.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/ERC20UpgradeSafe.sol:316"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b60cc587bbc67e8e9136a576ea28d692fe2c1eea5759196dc75f20a6b97e3706": {
      "address": "0x404aE8bca69Dcd96ff360182a927bf2F62C4223a",
      "txHash": "0x872f1add837f7cf9620aa3de27536a149c4de5c8634a45504297e8467310e154",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2483_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2026_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "NFTManager",
            "label": "timeStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:21"
          },
          {
            "contract": "NFTManager",
            "label": "amountStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:22"
          },
          {
            "contract": "NFTManager",
            "label": "blueprints",
            "type": "t_mapping(t_string_memory,t_array(t_uint256)4_storage)",
            "src": "contracts/NFTManager.sol:28"
          },
          {
            "contract": "NFTManager",
            "label": "blueprintExists",
            "type": "t_mapping(t_string_memory,t_bool)",
            "src": "contracts/NFTManager.sol:29"
          },
          {
            "contract": "NFTManager",
            "label": "myTokenURI",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/NFTManager.sol:31"
          },
          {
            "contract": "NFTManager",
            "label": "tokenURIs",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/NFTManager.sol:32"
          },
          {
            "contract": "NFTManager",
            "label": "mintedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/NFTManager.sol:33"
          },
          {
            "contract": "NFTManager",
            "label": "lastId",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:34"
          },
          {
            "contract": "NFTManager",
            "label": "yeld",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:35"
          },
          {
            "contract": "NFTManager",
            "label": "oneDayInBlocks",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:36"
          },
          {
            "contract": "NFTManager",
            "label": "devTreasury",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:37"
          },
          {
            "contract": "NFTManager",
            "label": "treasuryPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:38"
          },
          {
            "contract": "NFTManager",
            "label": "distributionToOthersPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:39"
          },
          {
            "contract": "NFTManager",
            "label": "chi",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:40"
          },
          {
            "contract": "NFTManager",
            "label": "distributeNFTRewards",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:41"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory,t_array(t_uint256)4_storage)": {
            "label": "mapping(string => uint256[4])"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_string_memory,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_struct(UintSet)2483_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)2483_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2204_storage"
              }
            ]
          },
          "t_struct(Set)2204_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2026_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1769_storage"
              }
            ]
          },
          "t_struct(Map)1769_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1761_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1761_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)1761_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6fd241ed75748f13a6fd28343dec15deab046f8a8be889284a0f68cc470818e2": {
      "address": "0xc73903BBe88CAabEaD011cF65E880bD2eD33F903",
      "txHash": "0xc67c429bd367c7d70c6744a16a2b8e8a0ddfe2c0f4a19fc3731b957a952ce66c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "amountLocked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DistributeNFTRewards.sol:16"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "lastPriceEarningsExtracted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DistributeNFTRewards.sol:18"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "lockingTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DistributeNFTRewards.sol:20"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "liquidityProviderToken",
            "type": "t_address",
            "src": "contracts/DistributeNFTRewards.sol:22"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "token",
            "type": "t_address",
            "src": "contracts/DistributeNFTRewards.sol:24"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "totalLiquidityLocked",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:26"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "totalTOKENFeeMined",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:28"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "tokenFeePrice",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:29"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "accomulatedRewards",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:30"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "pricePadding",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e547e3e1c49f41330653dd69c29706e5e9c9fc204470233d224b6b6911a3c9ef": {
      "address": "0xAfb72f234C8B8304a5c7d05e169c10715c9D6dc5",
      "txHash": "0x45e59302ef27b63225522689ad18159655fcb442f7e500709f0a3f791e42501a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2483_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2026_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "NFTManager",
            "label": "timeStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:21"
          },
          {
            "contract": "NFTManager",
            "label": "amountStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:22"
          },
          {
            "contract": "NFTManager",
            "label": "blueprints",
            "type": "t_mapping(t_string_memory,t_array(t_uint256)4_storage)",
            "src": "contracts/NFTManager.sol:28"
          },
          {
            "contract": "NFTManager",
            "label": "blueprintExists",
            "type": "t_mapping(t_string_memory,t_bool)",
            "src": "contracts/NFTManager.sol:29"
          },
          {
            "contract": "NFTManager",
            "label": "myTokenURI",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/NFTManager.sol:31"
          },
          {
            "contract": "NFTManager",
            "label": "myTokens",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/NFTManager.sol:32"
          },
          {
            "contract": "NFTManager",
            "label": "tokenURIs",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/NFTManager.sol:33"
          },
          {
            "contract": "NFTManager",
            "label": "mintedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/NFTManager.sol:34"
          },
          {
            "contract": "NFTManager",
            "label": "lastId",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:35"
          },
          {
            "contract": "NFTManager",
            "label": "yeld",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:36"
          },
          {
            "contract": "NFTManager",
            "label": "oneDayInBlocks",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:37"
          },
          {
            "contract": "NFTManager",
            "label": "devTreasury",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:38"
          },
          {
            "contract": "NFTManager",
            "label": "treasuryPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:39"
          },
          {
            "contract": "NFTManager",
            "label": "distributionToOthersPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:40"
          },
          {
            "contract": "NFTManager",
            "label": "chi",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:41"
          },
          {
            "contract": "NFTManager",
            "label": "distributeNFTRewards",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:42"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory,t_array(t_uint256)4_storage)": {
            "label": "mapping(string => uint256[4])"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_string_memory,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_mapping(t_address,t_struct(UintSet)2483_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)2483_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2204_storage"
              }
            ]
          },
          "t_struct(Set)2204_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2026_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1769_storage"
              }
            ]
          },
          "t_struct(Map)1769_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1761_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1761_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)1761_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "929fe81f99b89cf129796dbfa964cc9f6cf5d8a260fa8a68db8d17f96a42c108": {
      "address": "0x21Cd799cbCC1BF6DC16Ea615d8C01275bDABae48",
      "txHash": "0xbfcf7ec6f84eeb37a7f81fe56895679898dae05f9efd1ad252acca4b1ddb5a32",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2483_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2026_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "NFTManager",
            "label": "timeStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:21"
          },
          {
            "contract": "NFTManager",
            "label": "amountStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:22"
          },
          {
            "contract": "NFTManager",
            "label": "blueprints",
            "type": "t_mapping(t_string_memory,t_array(t_uint256)4_storage)",
            "src": "contracts/NFTManager.sol:28"
          },
          {
            "contract": "NFTManager",
            "label": "blueprintExists",
            "type": "t_mapping(t_string_memory,t_bool)",
            "src": "contracts/NFTManager.sol:29"
          },
          {
            "contract": "NFTManager",
            "label": "myTokenURI",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/NFTManager.sol:31"
          },
          {
            "contract": "NFTManager",
            "label": "myTokensCombinedCost",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:32"
          },
          {
            "contract": "NFTManager",
            "label": "myTokens",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/NFTManager.sol:33"
          },
          {
            "contract": "NFTManager",
            "label": "totalLockedTokens",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:34"
          },
          {
            "contract": "NFTManager",
            "label": "tokenURIs",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/NFTManager.sol:35"
          },
          {
            "contract": "NFTManager",
            "label": "mintedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/NFTManager.sol:36"
          },
          {
            "contract": "NFTManager",
            "label": "lastId",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:37"
          },
          {
            "contract": "NFTManager",
            "label": "yeld",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:38"
          },
          {
            "contract": "NFTManager",
            "label": "oneDayInBlocks",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:39"
          },
          {
            "contract": "NFTManager",
            "label": "devTreasury",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:40"
          },
          {
            "contract": "NFTManager",
            "label": "treasuryPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:41"
          },
          {
            "contract": "NFTManager",
            "label": "distributionToOthersPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:42"
          },
          {
            "contract": "NFTManager",
            "label": "chi",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:43"
          },
          {
            "contract": "NFTManager",
            "label": "distributeNFTRewards",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:44"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory,t_array(t_uint256)4_storage)": {
            "label": "mapping(string => uint256[4])"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_string_memory,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_mapping(t_address,t_struct(UintSet)2483_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)2483_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2204_storage"
              }
            ]
          },
          "t_struct(Set)2204_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2026_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1769_storage"
              }
            ]
          },
          "t_struct(Map)1769_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1761_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1761_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)1761_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "20a63f040941b631b6fa2b0f1e09805e9230e1e08fcc1870dfc10a73f002b2ff": {
      "address": "0x267Ac4328aA6E3eB4ac330F5A1519A92b902455D",
      "txHash": "0xfefc6a2228a936957819577ee9061736e411610c924edf075dc6efb43a79cd0a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2483_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2026_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "NFTManager",
            "label": "timeStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:21"
          },
          {
            "contract": "NFTManager",
            "label": "amountStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:22"
          },
          {
            "contract": "NFTManager",
            "label": "blueprints",
            "type": "t_mapping(t_string_memory,t_array(t_uint256)4_storage)",
            "src": "contracts/NFTManager.sol:28"
          },
          {
            "contract": "NFTManager",
            "label": "blueprintExists",
            "type": "t_mapping(t_string_memory,t_bool)",
            "src": "contracts/NFTManager.sol:29"
          },
          {
            "contract": "NFTManager",
            "label": "myTokenURI",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/NFTManager.sol:31"
          },
          {
            "contract": "NFTManager",
            "label": "myTokensCombinedCost",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:32"
          },
          {
            "contract": "NFTManager",
            "label": "myTokens",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/NFTManager.sol:33"
          },
          {
            "contract": "NFTManager",
            "label": "totalLockedTokens",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:34"
          },
          {
            "contract": "NFTManager",
            "label": "tokenURIs",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/NFTManager.sol:35"
          },
          {
            "contract": "NFTManager",
            "label": "mintedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/NFTManager.sol:36"
          },
          {
            "contract": "NFTManager",
            "label": "lastId",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:37"
          },
          {
            "contract": "NFTManager",
            "label": "yeld",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:38"
          },
          {
            "contract": "NFTManager",
            "label": "oneDayInBlocks",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:39"
          },
          {
            "contract": "NFTManager",
            "label": "devTreasury",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:40"
          },
          {
            "contract": "NFTManager",
            "label": "treasuryPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:41"
          },
          {
            "contract": "NFTManager",
            "label": "distributionToOthersPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:42"
          },
          {
            "contract": "NFTManager",
            "label": "chi",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:43"
          },
          {
            "contract": "NFTManager",
            "label": "distributeNFTRewards",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:44"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory,t_array(t_uint256)4_storage)": {
            "label": "mapping(string => uint256[4])"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_string_memory,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_mapping(t_address,t_struct(UintSet)2483_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)2483_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2204_storage"
              }
            ]
          },
          "t_struct(Set)2204_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2026_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1769_storage"
              }
            ]
          },
          "t_struct(Map)1769_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1761_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1761_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)1761_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "85050dc40b57357c921df7146db6572b0ec5f2239ce2fea43d1cf1d0e9f66442": {
      "address": "0xBd395f3E549ecDb84094fA6fC20D885dEc5Fc6d1",
      "txHash": "0xf620ff187e02007ce290663efc6d24c710ede6f2434eb9225a7278ad43f0d7bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2483_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2026_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "NFTManager",
            "label": "timeStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:22"
          },
          {
            "contract": "NFTManager",
            "label": "amountStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:23"
          },
          {
            "contract": "NFTManager",
            "label": "blueprints",
            "type": "t_mapping(t_string_memory,t_array(t_uint256)4_storage)",
            "src": "contracts/NFTManager.sol:29"
          },
          {
            "contract": "NFTManager",
            "label": "blueprintExists",
            "type": "t_mapping(t_string_memory,t_bool)",
            "src": "contracts/NFTManager.sol:30"
          },
          {
            "contract": "NFTManager",
            "label": "myTokenURI",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/NFTManager.sol:32"
          },
          {
            "contract": "NFTManager",
            "label": "myTokensCombinedCost",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:33"
          },
          {
            "contract": "NFTManager",
            "label": "myTokens",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/NFTManager.sol:34"
          },
          {
            "contract": "NFTManager",
            "label": "totalLockedTokens",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:35"
          },
          {
            "contract": "NFTManager",
            "label": "tokenURIs",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/NFTManager.sol:36"
          },
          {
            "contract": "NFTManager",
            "label": "mintedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/NFTManager.sol:37"
          },
          {
            "contract": "NFTManager",
            "label": "lastId",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:38"
          },
          {
            "contract": "NFTManager",
            "label": "yeld",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:39"
          },
          {
            "contract": "NFTManager",
            "label": "oneDayInBlocks",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:40"
          },
          {
            "contract": "NFTManager",
            "label": "devTreasury",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:41"
          },
          {
            "contract": "NFTManager",
            "label": "treasuryPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:42"
          },
          {
            "contract": "NFTManager",
            "label": "distributionToOthersPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:43"
          },
          {
            "contract": "NFTManager",
            "label": "chi",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:44"
          },
          {
            "contract": "NFTManager",
            "label": "distributeNFTRewards",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory,t_array(t_uint256)4_storage)": {
            "label": "mapping(string => uint256[4])"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_string_memory,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_mapping(t_address,t_struct(UintSet)2483_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)2483_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2204_storage"
              }
            ]
          },
          "t_struct(Set)2204_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2026_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1769_storage"
              }
            ]
          },
          "t_struct(Map)1769_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1761_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1761_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)1761_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8ba5831aee761350233333e6b84f2e443430cf6dc7e0918d7b2fed443965ced0": {
      "address": "0xD0320c2D4A7C5fe63190336026bc9e6ACc65a1c3",
      "txHash": "0xfef4f1ae7923d6630efd50597ea98a9c90b72285fc7c691403b462d0f209196f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "amountLocked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DistributeNFTRewards.sol:16"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "lastPriceEarningsExtracted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DistributeNFTRewards.sol:18"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "lockingTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DistributeNFTRewards.sol:20"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "liquidityProviderToken",
            "type": "t_address",
            "src": "contracts/DistributeNFTRewards.sol:22"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "rewardToken",
            "type": "t_address",
            "src": "contracts/DistributeNFTRewards.sol:24"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "totalLiquidityLocked",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:26"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "totalTOKENFeeMined",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:28"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "tokenFeePrice",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:29"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "accomulatedRewards",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:30"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "pricePadding",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:31"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/DistributeNFTRewards.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "da3eb3a07ccead64bf975044ba57d3ffc055c053aabf21e14066031f56f29892": {
      "address": "0xc042A4F23Fa88ec0dF3C9d43E6f9E276f0F80bD5",
      "txHash": "0x5a999bf005cad2004aeee03b33f595b7ea2743ed46e952b0c6f48f9c76609a06",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2483_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2026_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "NFTManager",
            "label": "timeStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:22"
          },
          {
            "contract": "NFTManager",
            "label": "amountStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:23"
          },
          {
            "contract": "NFTManager",
            "label": "blueprints",
            "type": "t_mapping(t_string_memory,t_array(t_uint256)4_storage)",
            "src": "contracts/NFTManager.sol:29"
          },
          {
            "contract": "NFTManager",
            "label": "blueprintExists",
            "type": "t_mapping(t_string_memory,t_bool)",
            "src": "contracts/NFTManager.sol:30"
          },
          {
            "contract": "NFTManager",
            "label": "myTokenURI",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/NFTManager.sol:32"
          },
          {
            "contract": "NFTManager",
            "label": "myTokensCombinedCost",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:33"
          },
          {
            "contract": "NFTManager",
            "label": "myTokens",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/NFTManager.sol:34"
          },
          {
            "contract": "NFTManager",
            "label": "totalLockedTokens",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:35"
          },
          {
            "contract": "NFTManager",
            "label": "tokenURIs",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/NFTManager.sol:36"
          },
          {
            "contract": "NFTManager",
            "label": "mintedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/NFTManager.sol:37"
          },
          {
            "contract": "NFTManager",
            "label": "lastId",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:38"
          },
          {
            "contract": "NFTManager",
            "label": "yeld",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:39"
          },
          {
            "contract": "NFTManager",
            "label": "oneDayInBlocks",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:40"
          },
          {
            "contract": "NFTManager",
            "label": "devTreasury",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:41"
          },
          {
            "contract": "NFTManager",
            "label": "treasuryPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:42"
          },
          {
            "contract": "NFTManager",
            "label": "distributionToOthersPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:43"
          },
          {
            "contract": "NFTManager",
            "label": "chi",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:44"
          },
          {
            "contract": "NFTManager",
            "label": "distributeNFTRewards",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory,t_array(t_uint256)4_storage)": {
            "label": "mapping(string => uint256[4])"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_string_memory,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_mapping(t_address,t_struct(UintSet)2483_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)2483_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2204_storage"
              }
            ]
          },
          "t_struct(Set)2204_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2026_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1769_storage"
              }
            ]
          },
          "t_struct(Map)1769_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1761_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1761_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)1761_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bea9907a4925f8de78fdcaa9c98d11ab8af099edf83fec10c648be23e4ff2914": {
      "address": "0x5c1Efe236cC29d77835Bc2Fa92A94d391cf0b34C",
      "txHash": "0x8c7b94ae00134e4f8934bb03e08c75e5efbcf2282b3595600359140c61b2d777",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:21"
          },
          {
            "contract": "ERC165UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol:63"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2483_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:32"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2026_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:35"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:38"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:41"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:44"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:47"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:50"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:53"
          },
          {
            "contract": "ERC721UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol:555"
          },
          {
            "contract": "NFTManager",
            "label": "timeStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:22"
          },
          {
            "contract": "NFTManager",
            "label": "amountStaked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:23"
          },
          {
            "contract": "NFTManager",
            "label": "blueprints",
            "type": "t_mapping(t_string_memory,t_array(t_uint256)4_storage)",
            "src": "contracts/NFTManager.sol:29"
          },
          {
            "contract": "NFTManager",
            "label": "blueprintExists",
            "type": "t_mapping(t_string_memory,t_bool)",
            "src": "contracts/NFTManager.sol:30"
          },
          {
            "contract": "NFTManager",
            "label": "myTokenURI",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/NFTManager.sol:32"
          },
          {
            "contract": "NFTManager",
            "label": "myTokensCombinedCost",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTManager.sol:33"
          },
          {
            "contract": "NFTManager",
            "label": "myTokens",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/NFTManager.sol:34"
          },
          {
            "contract": "NFTManager",
            "label": "totalLockedTokens",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:35"
          },
          {
            "contract": "NFTManager",
            "label": "tokenURIs",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/NFTManager.sol:36"
          },
          {
            "contract": "NFTManager",
            "label": "mintedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/NFTManager.sol:37"
          },
          {
            "contract": "NFTManager",
            "label": "lastId",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:38"
          },
          {
            "contract": "NFTManager",
            "label": "yeld",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:39"
          },
          {
            "contract": "NFTManager",
            "label": "oneDayInBlocks",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:40"
          },
          {
            "contract": "NFTManager",
            "label": "devTreasury",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:41"
          },
          {
            "contract": "NFTManager",
            "label": "treasuryPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:42"
          },
          {
            "contract": "NFTManager",
            "label": "distributionToOthersPercentage",
            "type": "t_uint256",
            "src": "contracts/NFTManager.sol:43"
          },
          {
            "contract": "NFTManager",
            "label": "chi",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:44"
          },
          {
            "contract": "NFTManager",
            "label": "distributeNFTRewards",
            "type": "t_address",
            "src": "contracts/NFTManager.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory,t_array(t_uint256)4_storage)": {
            "label": "mapping(string => uint256[4])"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_string_memory,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_mapping(t_address,t_struct(UintSet)2483_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)2483_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2204_storage"
              }
            ]
          },
          "t_struct(Set)2204_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2026_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1769_storage"
              }
            ]
          },
          "t_struct(Map)1769_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1761_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1761_storage)dyn_storage": {
            "label": "struct EnumerableMap.MapEntry[]"
          },
          "t_struct(MapEntry)1761_storage": {
            "label": "struct EnumerableMap.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "67a313cca1c6dd01847bba2b9dc919626360dbc2af4d36b34b592fad2ca6cb91": {
      "address": "0xC4551A38773bDaBF4cd4Eae7b6E3BCCfe0F0A287",
      "txHash": "0x936c06448711ab284bfe9e961d71200e388e76ee36f93413f267a8a0656e815f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "amountLocked",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DistributeNFTRewards.sol:16"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "lastPriceEarningsExtracted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DistributeNFTRewards.sol:18"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "lockingTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/DistributeNFTRewards.sol:20"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "liquidityProviderToken",
            "type": "t_address",
            "src": "contracts/DistributeNFTRewards.sol:22"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "rewardToken",
            "type": "t_address",
            "src": "contracts/DistributeNFTRewards.sol:24"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "totalLiquidityLocked",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:26"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "totalTOKENFeeMined",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:28"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "tokenFeePrice",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:29"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "accomulatedRewards",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:30"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "pricePadding",
            "type": "t_uint256",
            "src": "contracts/DistributeNFTRewards.sol:31"
          },
          {
            "contract": "DistributeNFTRewards",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/DistributeNFTRewards.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
